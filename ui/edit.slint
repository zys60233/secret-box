import { LineEdit, Button, VerticalBox } from "std-widgets.slint";
export component EditWindowContent inherits Rectangle {
    in-out property <string> id;
    in-out property <string> website;
    in-out property <string> account;
    in-out property <string> email;
    in-out property <string> phone;
    in-out property <string> password;

    //创建
    visible: false;
    width: 300px;
    height: 500px;
    z: 20;
    background: white;
    border-radius: 10px;

    callback close();

    callback generate();

    callback edit();

    Rectangle {
        x: 0;
        y: 0;
        width: 100%;
        height: 40px;
        background: #03a9f4;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;

        Text { 
            text: "编辑";
            font-size: 25px;
            horizontal-alignment: center;
        }
    }

    VerticalBox {
        width: 250px;
        alignment: center;
        spacing: 20px;

        LineEdit {
            height: 40px;
            placeholder-text: "网址";
            text: root.website;
            edited(text) => {
                root.website = text;
            }
        }

        LineEdit {
            height: 40px;
            placeholder-text: "账号";
            text: root.account;
            edited(text) => {
                root.account = text;
            }
        }

        LineEdit {
            height: 40px;
            placeholder-text: "邮箱";
            text: root.email;
            edited(text) => {
                root.email = text;
            }
        }

        LineEdit {
            height: 40px;
            placeholder-text: "手机号";
            text: root.phone;
            edited(text) => {
                root.phone = text;
            }
        }

        LineEdit {
            height: 40px;
            placeholder-text: "密码";
            text: root.password;
            edited(text) => {
                root.password = text;
            }
        }

        Button {
            text: "生成随机密码";
            height: 40px;
            clicked => {
                debug("生成随机密码");
                root.generate();
            }
        }

        HorizontalLayout {
            alignment: space-around;
            Button { 
                text: "保存"; 
                primary: true; 
                width: 100px;
                height: 40px;
                clicked => {
                    root.edit();
                } 
            }

            Button {
                text: "关闭";
                width: 100px;
                height: 40px;
                clicked => {
                    root.close();
                }
            }
        } 
    }
}